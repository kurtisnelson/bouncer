FORMAT: 1A
HOST: https://bouncer-api.monsieur.co

# Bouncer
Bouncer registers users and manages OAuth tokens.

# Group User

## Users Collection [/users]

### Create a user [POST]

Register a new user

+ Request (application/json)

   + Body

            {
                "users": {
                    "email": "kurt@example.com",
                    "password": "12345678",
                    "password_confirmation": "12345678"
                }
            }

+ Response 200

   + Body

            {
                "users": {
                    "id": "uuid",
                    "email": "kurt@example.com"
                }
            }

## Forgot Password [/users/reset]

### Forgot Password [POST]

Request a reset of a user's password

+ Request (application/json)

    + Body

            {
                "email": "kurt@example.com",
                "url": "optional URL to link to in email"
            }

+ Response 204

## Reset Password [/users/{id}/reset]

Reset a user's password

+ Request (application/json)

    + Body

          {
             "reset_password_token": "token",
             "users": {
                "password": "1234",
                "password_confirmation": "1234"
             }
          }

+ Response 204

## Confirmation [/users/{id}/confirm]

### Confirm phone or email [PUT]

Takes in either a phone or an email verification token.

+ Request (application/json)

    + Body
        
            {
                "confirmation_token": "token"
            }

+ Response 204

### Resend phone and/or email confirmation [GET]

Resets any pending confirmation tokens and re-sends notifications

+ Response 204

# Group Token

## Token resource [/oauth/token]
This endpoint provides token operations

### Exchange credentials for token [POST]

Scope is an optional field, `user` and `device` are valid. Password is the most common grant type. Either email or phone is required.

+ Request (application/json)

    + Headers

            Accepts: application/json

    + Body

            {
                "grant_type": "password | assertion | refresh_token",
                "scope": "user",
                "email": "kurt@example.com",
                "phone": "4048675309",
                "password": "password",
                "assertion": "facebook token",
                "refresh_token": "refresh token"
            }

+ Response 200

    + Body

            {
                "access_token": "hex",
                "token_type": "bearer",
                "expires_in": 7200,
                "refresh_token": "hex",
                "scope": "user",
                "created_at": 1423841405
            }

# Group Activation

## Activation [/activation/{id}]

+ Parameters
    + id (string) ... UUID of the activation
    
+ Model (application/json)

    + Body
    
            {
                "activations": [
                    {
                        "id": "69235f86-c296-4298-b21d-eb4c890ac89a",
                        "updated_at": "2015-04-29T19:40:23.045Z",
                        "created_at": "2015-04-29T19:40:23.045Z",
                        "links": {
                            "unit": "7156fce9-64ed-4c3a-896e-1d08d5347330",
                            "device": "ef661caf-80a5-49b0-98cd-5fe9778d5a8e",
                            "user": "06bb9da1-5585-4ee6-b9c0-2831b1d8db95",
                            "activation_token": "2840"
                        }
                    },
                ],
                "linked": {
                    "activation_tokens": [
                    {
                        "id": 2840,
                        "token": "yourtoken",
                        "expires_in_seconds": 0,
                        "refresh_token": "refreshtoken"
                    }
                    ]
                }
            }

### Retrieve an Activation [GET]

+ Response 200

    [Unit][]
    
### Deactivation [DELETE]

+ Response 204
    
## Collection [/activations]

### List Activations [GET]

+ Response 200

    [Unit][]
    
### Activate unit [POST]

Activates a serial number or Unit ID as a specific device. Returns tokens. Either serial or unit must be specified.

+ Request (application/json)

    + Headers

            Accepts: application/json
            Authorization: Bearer 3391f99c344af714903d69db38acf0f9a90383b4b251c6e9b84a580f53362e4f

    + Body
    
            {
                "activations": {
                    "device": "deviceUUID",
                    "serial": "serial"
                }
            }
            
+ Response 200

    [Activation][]
    
+ Response 403
+ Response 400

# Group Unit

## Unit [/unit/{id}]

+ Parameters
    + id (string) ... UUID of the unit

+ Model (application/json)

    + Body

                {"units": [
                    {
                        "id":"01b6beb7-41f0-40f3-86ee-233a1d8b000e",
                        "serial": "0000-000000-0000",
                        "updated_at": "time",
                        "created_at": "time"
                    }
                ]}

### Retrieve a Unit [GET]

+ Response 200

    [Unit][]

## Units Collection [/units]

### List Units [GET]

+ Response 200

    [Unit][]

### Create Unit [POST]

+ Request (application/json)

    + Headers

            Accepts: application/json
            Authorization: Bearer 3391f99c344af714903d69db38acf0f9a90383b4b251c6e9b84a580f53362e4f

    + Body

            {
                "units": [
                    {
                        "serial": "unique serial"
                    }
                ]
            }

+ Response 200

    [Unit][]

+ Response 403
+ Response 400
